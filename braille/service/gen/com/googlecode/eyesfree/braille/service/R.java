/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.googlecode.eyesfree.braille.service;

public final class R {
    public static final class attr {
    }
    public static final class drawable {
        public static int icon=0x7f020000;
    }
    public static final class raw {
        public static int keytables=0x7f040000;
        public static int translationtables=0x7f040001;
    }
    public static final class string {
        public static int app_name=0x7f05007b;
        /**  Displayed to the user after failing to initialize a braille display. The service was able to establish a connection to the device, but then, the driver failed to initialize. Contains the bluetooth name of the display.
         */
        public static int connprog_failed_to_initialize=0x7f05007f;
        /**  Displayed to the user when a braile device was found and the display driver is being initialized. Contains the bluetooth name of the display. 
         */
        public static int connprog_initializing=0x7f05007e;
        /**  Displayed to the user when there are no bonded devices that brailleback recognizes as braille display. 
         */
        public static int connprog_no_devices=0x7f050080;
        /**  Displayed to the user when trying to connect to a braille display. Contains the bluetooth name of the display. 
         */
        public static int connprog_trying=0x7f05007d;
        /**  APH Refreshabraille keys 
 Name for the advance left key on an APH Refreshabraille display. 
         */
        public static int key_APH_AdvanceLeft=0x7f050043;
        /**  Name for the advance right key on an APH Refreshabraille display. 
         */
        public static int key_APH_AdvanceRight=0x7f050044;
        /**  Name for the control key on the braillepen display. 
         */
        public static int key_BP_Control=0x7f050021;
        /**  Name for the scroll left key on the braille pen display. 
         */
        public static int key_BP_ScrollLeft=0x7f050022;
        /**  Name for the scroll right key on the braille pen display. 
         */
        public static int key_BP_ScrollRight=0x7f050023;
        /**  BraillePen keys 
 Name for the shift key on the braillepen display. 
         */
        public static int key_BP_Shift=0x7f050020;
        /**  Keys that are common on most displays 
 Name for the backspace key on the braille display. 
         */
        public static int key_Backspace=0x7f050000;
        /**  Name of the backward key on a braille display 
         */
        public static int key_Backward=0x7f050014;
        /**  Name for the key that represents braille dot 1 on the braille display. 
         */
        public static int key_Dot1=0x7f050002;
        /**  Name for the key that represents braille dot 2 on the braille display. 
         */
        public static int key_Dot2=0x7f050003;
        /**  Name for the key that represents braille dot 3 on the braille display. 
         */
        public static int key_Dot3=0x7f050004;
        /**  Name for the key that represents braille dot 4 on the braille display. 
         */
        public static int key_Dot4=0x7f050005;
        /**  Name for the key that represents braille dot 5 on the braille display. 
         */
        public static int key_Dot5=0x7f050006;
        /**  Name for the key that represents braille dot 6 on the braille display. 
         */
        public static int key_Dot6=0x7f050007;
        /**  Name for the key that represents braille dot 7 on the braille display. 
         */
        public static int key_Dot7=0x7f050008;
        /**  Name for the key that represents braille dot 8 on the braille display. 
         */
        public static int key_Dot8=0x7f050009;
        /**  Name of a numbered function key on a braille display. 
         */
        public static int key_F1=0x7f050010;
        /**  Name of a numbered function key on a braille display. 
         */
        public static int key_F2=0x7f050011;
        /**  Name of a numbered function key on a braille display. 
         */
        public static int key_F3=0x7f050012;
        /**  Name of a numbered function key on a braille display. 
         */
        public static int key_F4=0x7f050013;
        /**  Name of the forward key on a braille display 
         */
        public static int key_Forward=0x7f050015;
        /**  Key name representing pressing the joystick in the center on the braille display. 
         */
        public static int key_JoystickCenter=0x7f05000f;
        /**  Key name representing pressing the joystick down on the braille display. 
         */
        public static int key_JoystickDown=0x7f05000e;
        /**  Key name representing pressing the joystick left on the braille display. 
         */
        public static int key_JoystickLeft=0x7f05000b;
        /**  Key name representing pressing the joystick right on the braille display. 
         */
        public static int key_JoystickRight=0x7f05000c;
        /**  Key name representing pressing the joystick up on the braille display. 
         */
        public static int key_JoystickUp=0x7f05000d;
        /**  Key name representing pressing the left joystick in the center on an esys/eurobraille/seika ntk braille display. 
         */
        public static int key_LeftJoystickCenter=0x7f05001a;
        /**  Key name representing pressing the left joystick down on an esys/eurobraille/seika ntk braille display. 
         */
        public static int key_LeftJoystickDown=0x7f050019;
        /**  Key name representing pressing the left joystick left on an esys/eurobraille/seika ntk braille display. 
         */
        public static int key_LeftJoystickLeft=0x7f050016;
        /**  Key name representing pressing the left joystick right on an esys/eurobraille/seika ntk braille display. 
         */
        public static int key_LeftJoystickRight=0x7f050017;
        /**  Key name representing pressing the left joystick up on an esys/eurobraille/seika ntk braille display. 
         */
        public static int key_LeftJoystickUp=0x7f050018;
        /**  Key name representing pressing the right joystick in the center on an esys/eurobraille/seika ntk braille display. 
         */
        public static int key_RightJoystickCenter=0x7f05001f;
        /**  Key name representing pressing the right joystick down on an esys/eurobraille/seika ntk braille display. 
         */
        public static int key_RightJoystickDown=0x7f05001e;
        /**  Key name representing pressing the right joystick left on an esys/eurobraille/seika ntk braille display. 
         */
        public static int key_RightJoystickLeft=0x7f05001b;
        /**  Key name representing pressing the right joystick right on an esys/eurobraille/seika ntk braille display. 
         */
        public static int key_RightJoystickRight=0x7f05001c;
        /**  Key name representing pressing the right joystick up on an esys/eurobraille/seika ntk braille display. 
         */
        public static int key_RightJoystickUp=0x7f05001d;
        /**  Name for any of the routing keys on the braille display.  A key in a set of keys located close to the braille line with one key for each braille cell. 
         */
        public static int key_Routing=0x7f05000a;
        /**  Name for the space key on the braille display. 
         */
        public static int key_Space=0x7f050001;
        /**  Name for the ETouchLeftFront key on an Alva BC display. 
         */
        public static int key_albc_ETouchLeftFront=0x7f05005b;
        /**  Alva BC 
 Name for the ETouchLeftRear key on an Alva BC display. 
         */
        public static int key_albc_ETouchLeftRear=0x7f050059;
        /**  Name for the ETouchRightFront key on an Alva BC display. 
         */
        public static int key_albc_ETouchRightFront=0x7f05005c;
        /**  Name for the ETouchRightRear key on an Alva BC display. 
         */
        public static int key_albc_ETouchRightRear=0x7f05005a;
        /**  Name for the SmartpadDown key on an Alva BC display. 
         */
        public static int key_albc_SmartpadDown=0x7f050062;
        /**  Name for the SmartpadEnter key on an Alva BC display. 
         */
        public static int key_albc_SmartpadEnter=0x7f050065;
        /**  Name for the SmartpadF1 key on an Alva BC display. 
         */
        public static int key_albc_SmartpadF1=0x7f05005d;
        /**  Name for the SmartpadF2 key on an Alva BC display. 
         */
        public static int key_albc_SmartpadF2=0x7f05005e;
        /**  Name for the SmartpadF3 key on an Alva BC display. 
         */
        public static int key_albc_SmartpadF3=0x7f05005f;
        /**  Name for the SmartpadF4 key on an Alva BC display. 
         */
        public static int key_albc_SmartpadF4=0x7f050060;
        /**  Name for the SmartpadLeft key on an Alva BC display. 
         */
        public static int key_albc_SmartpadLeft=0x7f050063;
        /**  Name for the SmartpadRight key on an Alva BC display. 
         */
        public static int key_albc_SmartpadRight=0x7f050064;
        /**  Name for the SmartpadUp key on an Alva BC display. 
         */
        public static int key_albc_SmartpadUp=0x7f050061;
        /**  Name for the ThumbDown key on an Alva BC display. 
         */
        public static int key_albc_ThumbDown=0x7f050069;
        /**  Name for the ThumbHome key on an Alva BC display. 
         */
        public static int key_albc_ThumbHome=0x7f05006a;
        /**  Name for the ThumbLeft key on an Alva BC display. 
         */
        public static int key_albc_ThumbLeft=0x7f050066;
        /**  Name for the ThumbRight key on an Alva BC display. 
         */
        public static int key_albc_ThumbRight=0x7f050067;
        /**  Name for the ThumbUp key on an Alva BC display. 
         */
        public static int key_albc_ThumbUp=0x7f050068;
        /**  Key name for pressing the easy bar 1 step down on a Papenmeier Braillex display. 
         */
        public static int key_braillex_BarDown1=0x7f050055;
        /**  Key name for pressing the easy bar 2 steps down on a Papenmeier Braillex display. 
         */
        public static int key_braillex_BarDown2=0x7f050056;
        /**  Key name for pressing the easy bar 1 step left on a Papenmeier Braillex display. 
         */
        public static int key_braillex_BarLeft1=0x7f05004f;
        /**  Key name for pressing the easy bar 2 steps left on a Papenmeier Braillex display. 
         */
        public static int key_braillex_BarLeft2=0x7f050050;
        /**  Key name for pressing the easy bar 1 step right on a Papenmeier Braillex display. 
         */
        public static int key_braillex_BarRight1=0x7f050051;
        /**  Key name for pressing the easy bar 2 steps right on a Papenmeier Braillex display. 
         */
        public static int key_braillex_BarRight2=0x7f050052;
        /**  Key name for pressing the easy bar 1 step up on a Papenmeier Braillex display. 
         */
        public static int key_braillex_BarUp1=0x7f050053;
        /**  Key name for pressing the easy bar 2 steps up on a Papenmeier Braillex display. 
         */
        public static int key_braillex_BarUp2=0x7f050054;
        /**  Name for the left front key on a Papenmeier Braillex display. 
         */
        public static int key_braillex_LeftKeyFront=0x7f05004d;
        /**  Name for the left rear key on a Papenmeier Braillex display. 
         */
        public static int key_braillex_LeftKeyRear=0x7f05004e;
        /**  Name for the left thumb key on a Papenmeier Braillex display. 
         */
        public static int key_braillex_LeftThumb=0x7f050057;
        /**  Braillex 
 Name for the right front key on a Papenmeier Braillex display. 
         */
        public static int key_braillex_RightKeyFront=0x7f05004b;
        /**  Name for the right rear key on a Papenmeier Braillex display. 
         */
        public static int key_braillex_RightKeyRear=0x7f05004c;
        /**  Name for the right thumb key on a Papenmeier Braillex display. 
         */
        public static int key_braillex_RightThumb=0x7f050058;
        /**  Name for the command 1 key on a Brailliant braille display. 
         */
        public static int key_brailliant_Display1=0x7f050039;
        /**  Name for the command 2 key on a Brailliant braille display. 
         */
        public static int key_brailliant_Display2=0x7f05003a;
        /**  Name for the command 4 key on a Brailliant braille display. 
         */
        public static int key_brailliant_Display3=0x7f05003b;
        /**  Name for the command 4 key on a Brailliant braille display. 
         */
        public static int key_brailliant_Display4=0x7f05003c;
        /**  Name for the command 5 key on a Brailliant braille display. 
         */
        public static int key_brailliant_Display5=0x7f05003d;
        /**  Name for the command 6 key on a Brailliant braille display. 
         */
        public static int key_brailliant_Display6=0x7f05003e;
        /**  Brailliant 
 Name for the power key on a Brailliant braille display. 
         */
        public static int key_brailliant_Power=0x7f050038;
        /**  Name for the thumb 1 key on a Brailliant braille display. 
         */
        public static int key_brailliant_Thumb1=0x7f05003f;
        /**  Name for the thumb 2 key on a Brailliant braille display. 
         */
        public static int key_brailliant_Thumb2=0x7f050040;
        /**  Name for the thumb 3 key on a Brailliant braille display. 
         */
        public static int key_brailliant_Thumb3=0x7f050041;
        /**  Name for the thumb 4 key on a Brailliant braille display. 
         */
        public static int key_brailliant_Thumb4=0x7f050042;
        /**  Esys keys 
 Key name for pressing one of the front switches to the left on an esys/eurobraille display. 
         */
        public static int key_esys_SwitchLeft=0x7f050024;
        /**  Key name for pressing one of the front switches to the right on an esys/eurobraille display. 
         */
        public static int key_esys_SwitchRight=0x7f050025;
        /**  Focus 
 Key name for the left advance key on a freedom scientific focus braille display. 
         */
        public static int key_focus_LeftAdvance=0x7f050028;
        /**  Name for the left gdf key on a freedomscientific braille display. 
         */
        public static int key_focus_LeftGdf=0x7f050032;
        /**  Name for pressing the left rocker down on a freedomscientific braille display. 
         */
        public static int key_focus_LeftRockerDown=0x7f050035;
        /**  Name for pressing the left rocker up on a freedomscientific braille display. 
         */
        public static int key_focus_LeftRockerUp=0x7f050034;
        /**  Name for the left shift key on a freedomscientific braille display. 
         */
        public static int key_focus_LeftShift=0x7f050030;
        /**  Key name for moving the left wheel down on a freedom scientific focus braille display. 
         */
        public static int key_focus_LeftWheelDown=0x7f05002c;
        /**  Key name for pressing the left wheel on a freedom scientific focus braille display. 
         */
        public static int key_focus_LeftWheelPress=0x7f05002a;
        /**  Key name for moving the left wheel up on a freedom scientific focus braille display. 
         */
        public static int key_focus_LeftWheelUp=0x7f05002b;
        /**  Key name for the right advance key on a freedom scientific focus braille display. 
         */
        public static int key_focus_RightAdvance=0x7f050029;
        /**  Name for the right gdf key on a freedomscientific braille display. 
         */
        public static int key_focus_RightGdf=0x7f050033;
        /**  Name for pressing the right rocker down on a freedomscientific braille display. 
         */
        public static int key_focus_RightRockerDown=0x7f050037;
        /**  Name for pressing the right rocker up on a freedomscientific braille display. 
         */
        public static int key_focus_RightRockerUp=0x7f050036;
        /**  Name for the right shift key on a freedomscientific braille display. 
         */
        public static int key_focus_RightShift=0x7f050031;
        /**  Key name for moving the right wheel down on a freedom scientific focus braille display. 
         */
        public static int key_focus_RightWheelDown=0x7f05002f;
        /**  Key name for pressing the right wheel on a freedom scientific focus braille display. 
         */
        public static int key_focus_RightWheelPress=0x7f05002d;
        /**  Key name for moving the right wheel up on a freedom scientific focus braille display. 
         */
        public static int key_focus_RightWheelUp=0x7f05002e;
        /**  Left and right space bars 
         */
        public static int key_handytech_LeftSpace=0x7f050071;
        public static int key_handytech_LeftTrippleActionBottom=0x7f05006c;
        public static int key_handytech_LeftTrippleActionMiddle=0x7f05006d;
        /**  HandyTech keys 
 Left triple action key 
         */
        public static int key_handytech_LeftTrippleActionTop=0x7f05006b;
        public static int key_handytech_RightSpace=0x7f050072;
        public static int key_handytech_RightTrippleActionBottom=0x7f05006f;
        public static int key_handytech_RightTrippleActionMiddle=0x7f050070;
        /**  Right triple action key 
         */
        public static int key_handytech_RightTrippleActionTop=0x7f05006e;
        /**  HWG Brailliant (older model) 
 Name for the display 1 key on a HWG Brailliant display. 
         */
        public static int key_hwg_brailliant_Display1=0x7f050045;
        /**  Name for the display 2 key on a HWG Brailliant display. 
         */
        public static int key_hwg_brailliant_Display2=0x7f050046;
        /**  Name for the display 3 key on a HWG Brailliant display. 
         */
        public static int key_hwg_brailliant_Display3=0x7f050047;
        /**  Name for the display 4 key on a HWG Brailliant display. 
         */
        public static int key_hwg_brailliant_Display4=0x7f050048;
        /**  Name for the display 5 key on a HWG Brailliant display. 
         */
        public static int key_hwg_brailliant_Display5=0x7f050049;
        /**  Name for the display 6 key on a HWG Brailliant display. 
         */
        public static int key_hwg_brailliant_Display6=0x7f05004a;
        /**  Name for pressing long key to the left of center on a Seika Braille display. 
         */
        public static int key_skbdp_LeftLongKey=0x7f050077;
        /**  Name for pressing left end of left rocker on a Seika Braille display. 
         */
        public static int key_skbdp_LeftRockerLeft=0x7f050075;
        /**  Name for pressing right end of left rocker on a Seika Braille display. 
         */
        public static int key_skbdp_LeftRockerRight=0x7f050076;
        /**  Seika Braille Display 
 Name for pressing pan left on a Seika Braille display. 
         */
        public static int key_skbdp_PanLeft=0x7f050073;
        /**  Name for pressing pan right on a Seika Braille display. 
         */
        public static int key_skbdp_PanRight=0x7f050074;
        /**  Name for pressing long key to the right of center on a Seika Braille display. 
         */
        public static int key_skbdp_RightLongKey=0x7f050078;
        /**  Name for pressing left end of right rocker on a Seika Braille display. 
         */
        public static int key_skbdp_RightRockerLeft=0x7f050079;
        /**  Name for pressing right end on a right rocker on a Seika Braille display. 
         */
        public static int key_skbdp_RightRockerRight=0x7f05007a;
        /**  Seika NTK 
 Name for pressing pan left key on a Seika NTK display. 
         */
        public static int key_skntk_PanLeft=0x7f050026;
        /**  Name for pressing pan right key on a Seika NTK display. 
         */
        public static int key_skntk_PanRight=0x7f050027;
        public static int service_label=0x7f05007c;
    }
    public static final class xml {
        public static int tablelist=0x7f030000;
    }
}
